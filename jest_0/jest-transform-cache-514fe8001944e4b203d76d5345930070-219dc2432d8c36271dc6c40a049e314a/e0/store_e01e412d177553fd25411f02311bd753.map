{"version":3,"sources":["store.js"],"names":["Vue","use","Vuex","axios","defaults","baseUrl","store","Store","modules","plugins","state","token","getters","loggedIn","accessToken","localStorage","getItem","set","mutations","updateToken","retriveToken","distroyToken","actions","getToken","context","credentials","console","log","resolve","reject","post","email","password","then","response","data","access_token","commit","setItem","catch","error","userRegister","username","newemail","newpassword","destroyToken","headers","common","abc","removeItem","getUserList"],"mappings":"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","file":"store.js","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex);\n\naxios.defaults.baseUrl = 'http://localhost:8081/api/';\n\nlet store = new Vuex.Store({\n    modules:{},\n    plugins:[],\n    state : {\n        token: '',\n    },\n    getters:{ \n        loggedIn(state){\n            var accessToken = localStorage.getItem('access_token');\n            if(accessToken){\n                Vue.set(state, 'token', accessToken);\n            }\n            return (state.token ? true : false);            \n        },        \n    },\n    mutations: {\n        updateToken (state, token) {\n            Vue.set(state, 'token', token);\n        },\n        retriveToken(state, token){\n            Vue.set(state, 'token', token);\n        },\n        distroyToken(state){\n            Vue.set(state, 'token', null);\n        }\n\n\n    },\n    actions:{\n        getToken(context, credentials) {\n            console.log('get Token');   \n            return new Promise((resolve, reject) => {\n                axios.post('/login',{\n                    email: credentials.email,\n                    password: credentials.password,\n                })\n                .then(response => {\n                    console.log(response);\n                    const token = response.data.access_token\n                    context.commit('updateToken',token)\n                    localStorage.setItem('access_token', token)\n                    \n                    resolve(response)\n                })\n                .catch(error => {\n                    console.log(error)\n                    reject(error)\n                })\n            })\n        },\n        userRegister(context, credentials){\n            return new Promise((resolve, reject) => {\n                axios.post('/register', {\n                    username : credentials.username,\n                    newemail : credentials.newemail,\n                    newpassword : credentials.newpassword\n                })\n                .then(response => {\n                    resolve(response)\n                })\n                .catch(error => {\n                    reject(error)\n                })\n            })\n        },\n        destroyToken(context){\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\n            if(context.getters.loggedIn){\n                let abc = localStorage.removeItem('access_token')\n                context.commit('distroyToken')\n            }\n        },\n        getUserList(context) {\n            return new Promise((resolve, reject) => {\n                axios.post('/getUserList')\n                .then(response => {\n                    //console.log(response);\n                    resolve(response)\n                })\n                .catch(error => {\n                    //console.log(error)\n                    reject(error)\n                })\n            })\n        },\n    }\n})\nexport default store"]}