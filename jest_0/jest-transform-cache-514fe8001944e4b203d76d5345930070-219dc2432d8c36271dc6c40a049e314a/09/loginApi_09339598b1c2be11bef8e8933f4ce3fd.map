{"version":3,"sources":["loginApi.js"],"names":["connection","require","jwt","exports","login","req","res","console","log","email","body","password","queryString","query","err","rows","resultData","send","token","sign","id","expiresIn","length","access_token","register","data","username","newemail","newpassword","result","getUserList"],"mappings":"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","file":"loginApi.js","sourcesContent":["var connection = require('./Api/dbconnection');\nvar jwt = require('jsonwebtoken');\n\n\n\nexports.login = function(req, res)\n{\n        console.log('Login in main js');\n        \n        var email = req.body.email;\n        var password = req.body.password;\n        var queryString = 'SELECT * FROM user where email = '+\"'\"+email+\"'\"+' AND password ='+\"'\"+password+\"'\";\n        \n        connection.query(queryString, function(err,rows)\n        {    \n        \t//console.log(rows);\n            if (err) {\n            \tconsole.log('in Error');\n        \t\tvar resultData = JSON.stringify({'success': false, 'data': \"Problem in fetch data\"});\n    \t\t\tres.send(resultData);\n        \t} else {\n        \t\tvar token = jwt.sign({ id: rows.id }, \"hitesh@123\", {\n\t\t\t      expiresIn: 3600 // expires in 24 hours\n\t\t\t    });\n        \t\tif(rows.length > 0)\n        \t\t{\n\t\t\t\t\trows[0].access_token = token;\n\t\t\t\t\t//console.log(rows);\n            \t\tvar resultData = JSON.stringify({'success': true, 'access_token':token, 'userdetails': rows[0]});\n    \t\t\t\tres.send(resultData);\n        \t\t} else {\n        \t\t\tvar resultData = JSON.stringify({'success': false, 'data': \"No Data available\"});\n    \t\t\t\tres.send(resultData);\n        \t\t}\n        \t}\n            \n            \n        });\n};\n\nexports.register = function(req, res)\n{\n    console.log(\"register action\");\n\t\n\tvar data = { \n                username  : req.body.username,\n                email  : req.body.newemail,\n                password : req.body.newpassword\n            };\n    console.log(data);\n    connection.query(\"INSERT INTO user SET ?\", [data], function(err, result)\n    {\n        console.log(err);\n      if (err) {\n      \tvar resultData = JSON.stringify({'failed': true, 'data': \"Something went wrong\"});\n        res.send(resultData);\n      } else {\n      \tvar resultData = JSON.stringify({'success': true, 'data': result});\n        console.log('success');\n        res.send(resultData);\n      }\n      \t\n      \n    });   \n};\n\nexports.getUserList = function(req, res)\n{\n        console.log('get user list');\n        \n        var queryString = 'SELECT * FROM user';\n        \n        connection.query(queryString, function(err,rows)\n        {    \n        \t//console.log(rows);\n          if (err) \n          {\n           \tconsole.log('in Error');\n        \t\tvar resultData = JSON.stringify({'success': false, 'data': \"Problem in fetch data\"});\n    \t\t\t  res.send(resultData);\n        \t} \n          else if(rows.length > 0)\n          {\n\t\t\t\t\t    var resultData = JSON.stringify({'success': true, 'userdetails': rows});\n    \t\t\t\t  res.send(resultData);\n        \t} else {\n        \t\t\tvar resultData = JSON.stringify({'success': false, 'data': \"No Data available\"});\n    \t\t\t\t  res.send(resultData);\n        \t}\n        });\n};\n\n"]}