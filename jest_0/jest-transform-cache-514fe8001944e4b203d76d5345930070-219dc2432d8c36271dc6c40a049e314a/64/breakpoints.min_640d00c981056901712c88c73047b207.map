{"version":3,"sources":["breakpoints.min.js"],"names":["breakpoints","_","list","media","events","init","window","addEventListener","poll","active","query","breakpoint","op","a","x","y","units","substr","Array","isArray","parseInt","isNaN","String","length","charAt","matchMedia","matches","on","handler","push","state","i","e","__","root","factory","define","amd","exports","module"],"mappings":"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","file":"breakpoints.min.js","sourcesContent":["/* breakpoints.js v0.1-dev | @ajlkn | MIT licensed */\r\n\r\nvar breakpoints = (function() { \"use strict\"; var _ = {\r\n\r\n\t/**\r\n\t * List.\r\n\t * @var {array}\r\n\t */\r\n\tlist: null,\r\n\r\n\t/**\r\n\t * Media cache.\r\n\t * @var {object}\r\n\t */\r\n\tmedia: {},\r\n\r\n\t/**\r\n\t * Events.\r\n\t * @var {array}\r\n\t */\r\n\tevents: [],\r\n\r\n\t/**\r\n\t * Initialize.\r\n\t * @param {array} list List.\r\n\t */\r\n\tinit: function(list) {\r\n\r\n\t\t// Set list.\r\n\t\t\t_.list = list;\r\n\r\n\t\t// Add event listeners.\r\n\t\t\twindow.addEventListener('resize',\t\t\t\t_.poll);\r\n\t\t\twindow.addEventListener('orientationchange',\t_.poll);\r\n\t\t\twindow.addEventListener('load',\t\t\t\t\t_.poll);\r\n\t\t\twindow.addEventListener('fullscreenchange',\t\t_.poll);\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Determines if a given query is active.\r\n\t * @param {string} query Query.\r\n\t * @return {bool} True if yes, false if no.\r\n\t */\r\n\tactive: function(query) {\r\n\r\n\t\tvar breakpoint, op, media,\r\n\t\t\ta, x, y, units;\r\n\r\n\t\t// Media for this query doesn't exist? Generate it.\r\n\t\t\tif (!(query in _.media)) {\r\n\r\n\t\t\t\t// Determine operator, breakpoint.\r\n\r\n\t\t\t\t\t// Greater than or equal.\r\n\t\t\t\t\t\tif (query.substr(0, 2) == '>=') {\r\n\r\n\t\t\t\t\t\t\top = 'gte';\r\n\t\t\t\t\t\t\tbreakpoint = query.substr(2);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Less than or equal.\r\n\t\t\t\t\t\telse if (query.substr(0, 2) == '<=') {\r\n\r\n\t\t\t\t\t\t\top = 'lte';\r\n\t\t\t\t\t\t\tbreakpoint = query.substr(2);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Greater than.\r\n\t\t\t\t\t\telse if (query.substr(0, 1) == '>') {\r\n\r\n\t\t\t\t\t\t\top = 'gt';\r\n\t\t\t\t\t\t\tbreakpoint = query.substr(1);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Less than.\r\n\t\t\t\t\t\telse if (query.substr(0, 1) == '<') {\r\n\r\n\t\t\t\t\t\t\top = 'lt';\r\n\t\t\t\t\t\t\tbreakpoint = query.substr(1);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Not.\r\n\t\t\t\t\t\telse if (query.substr(0, 1) == '!') {\r\n\r\n\t\t\t\t\t\t\top = 'not';\r\n\t\t\t\t\t\t\tbreakpoint = query.substr(1);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Equal.\r\n\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\top = 'eq';\r\n\t\t\t\t\t\t\tbreakpoint = query;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t// Build media.\r\n\t\t\t\t\tif (breakpoint && breakpoint in _.list) {\r\n\r\n\t\t\t\t\t\ta = _.list[breakpoint];\r\n\r\n\t\t\t\t\t\t// Range.\r\n\t\t\t\t\t\t\tif (Array.isArray(a)) {\r\n\r\n\t\t\t\t\t\t\t\tx = parseInt(a[0]);\r\n\t\t\t\t\t\t\t\ty = parseInt(a[1]);\r\n\r\n\t\t\t\t\t\t\t\tif (!isNaN(x))\r\n\t\t\t\t\t\t\t\t\tunits = a[0].substr(String(x).length);\r\n\t\t\t\t\t\t\t\telse if (!isNaN(y))\r\n\t\t\t\t\t\t\t\t\tunits = a[1].substr(String(y).length);\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t\t// Max only.\r\n\t\t\t\t\t\t\t\t\tif (isNaN(x)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tswitch (op) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Greater than or equal (>= 0 / anything)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'gte':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Less than or equal (<= y)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'lte':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: ' + y + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Greater than (> y)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'gt':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (min-width: ' + (y + 1) + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Less than (< 0 / invalid)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'lt':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: -1px)';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Not (> y)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'not':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (min-width: ' + (y + 1) + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Equal (<= y)\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: ' + y + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Min only.\r\n\t\t\t\t\t\t\t\t\telse if (isNaN(y)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tswitch (op) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Greater than or equal (>= x)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'gte':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (min-width: ' + x + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Less than or equal (<= inf / anything)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'lte':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Greater than (> inf / invalid)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'gt':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: -1px)';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Less than (< x)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'lt':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: ' + (x - 1) + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Not (< x)\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'not':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: ' + (x - 1) + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Equal (>= x)\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (min-width: ' + x + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Min and max.\r\n\t\t\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t\t\tswitch (op) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Greater than or equal.\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'gte':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (min-width: ' + x + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Less than or equal.\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'lte':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: ' + y + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Greater than.\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'gt':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (min-width: ' + (y + 1) + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Less than.\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'lt':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: ' + (x - 1) + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Not.\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'not':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (max-width: ' + (x - 1) + units + '), screen and (min-width: ' + (y + 1) + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Equal.\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmedia = 'screen and (min-width: ' + x + units + ') and (max-width: ' + y + units + ')';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// String.\r\n\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t// Missing a media type? Prefix with \"screen\".\r\n\t\t\t\t\t\t\t\t\tif (a.charAt(0) == '(')\r\n\t\t\t\t\t\t\t\t\t\tmedia = 'screen and ' + a;\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, use as-is.\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tmedia = a;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Cache.\r\n\t\t\t\t\t_.media[query] = (media ? media : false);\r\n\r\n\t\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t_.media[query] === false\r\n\t\t\t? false\r\n\t\t\t: window.matchMedia(_.media[query]).matches\r\n\t\t);\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Registers an event.\r\n\t * @param {string} query Query.\r\n\t * @param {function} handler Handler.\r\n\t */\r\n\ton: function(query, handler) {\r\n\r\n\t\t// Register event.\r\n\t\t\t_.events.push({\r\n\t\t\t\tquery: query,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tstate: false\r\n\t\t\t});\r\n\r\n\t\t// Query active *right now*? Call handler.\r\n\t\t\tif (_.active(query))\r\n\t\t\t\t(handler)();\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Polls for events.\r\n\t */\r\n\tpoll: function() {\r\n\r\n\t\tvar i, e;\r\n\r\n\t\t// Step through events.\r\n\t\t\tfor (i=0; i < _.events.length; i++) {\r\n\r\n\t\t\t\t// Get event.\r\n\t\t\t\t\te = _.events[i];\r\n\r\n\t\t\t\t// Active?\r\n\t\t\t\t\tif (_.active(e.query)) {\r\n\r\n\t\t\t\t\t\t// Hasn't been called yet?\r\n\t\t\t\t\t\t\tif (!e.state) {\r\n\r\n\t\t\t\t\t\t\t\t// Mark as called.\r\n\t\t\t\t\t\t\t\t\te.state = true;\r\n\r\n\t\t\t\t\t\t\t\t// Call handler.\r\n\t\t\t\t\t\t\t\t\t(e.handler)();\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Otherwise ...\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t// Previously called?\r\n\t\t\t\t\t\t\tif (e.state) {\r\n\r\n\t\t\t\t\t\t\t\t// Unmark as called.\r\n\t\t\t\t\t\t\t\t\te.state = false;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t},\r\n\r\n}; function __(list) { _.init(list); }; __._ = _; __.on = function(query, handler) { _.on(query, handler); }; __.active = function(query) { return _.active(query); }; return __; })();\r\n\r\n// UMD Wrapper (github.com/umdjs/umd/blob/master/returnExports.js | @umdjs + @nason)\r\n(function(root, factory) {\r\n\r\n\t// AMD.\r\n\t\tif (typeof define === 'function' && define.amd)\r\n\t\t\tdefine([], factory);\r\n\r\n\t// Node.\r\n\t\telse if (typeof exports === 'object')\r\n\t\t\tmodule.exports = factory();\r\n\r\n\t// Breakpoints global.\r\n\t\telse\r\n\t\t\troot.breakpoints = factory();\r\n\r\n}(this, function() { return breakpoints; }));"]}