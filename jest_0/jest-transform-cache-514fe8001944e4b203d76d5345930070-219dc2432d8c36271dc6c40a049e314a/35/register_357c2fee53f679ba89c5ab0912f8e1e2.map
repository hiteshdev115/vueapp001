{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;AAyCA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAdA;AAgBA;AACA;AACA;;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAvBA;AAjCA;AA1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n    <div>\n        <!-- Heading -->\n\t\t\t<div id=\"heading\" >\n\t\t\t\t<h1>User Registration</h1>\n\t\t\t</div>\n\n\t\t<!-- Main -->\n\t\t\t<section id=\"main\">\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"container\"> \n\t\t\t\t\t\t\t<div class=\"login\">\n\t\t\t\t\t\t\t\t<form class=\"sign-in\">\n\t\t\t\t\t\t\t\t\t<h2>Sign Up</h2>\n\t\t\t\t\t\t\t\t\t<div class=\"alert alert-success\" role=\"alert\">\n                                        {{successMessage}}\n                                    </div>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Name\" v-model=\"username\" v-model.trim=\"$v.username.$model\" name=\"username\" id=\"username\" class=\"form-control\" :class=\"{ 'input-error': $v.username.$error }\"/>\n                                    <div class=\"error\" v-if=\"!$v.username.required\">Username is required</div>\n                                    \n                                    <input type=\"email\" placeholder=\"Email\" v-model=\"newemail\" v-model.trim=\"$v.newemail.$model\" name=\"newemail\" id=\"newemail\" class=\"form-control\" :class=\"{ 'input-error': $v.newemail.$error }\"/>\n\t\t\t\t\t\t\t\t    <div class=\"error\" v-if=\"!$v.newemail.required\">Email is required</div>\n                                    <div class=\"error\" v-if=\"!$v.newemail.email\">Email must be valid</div>\n\t\t\t\t\t\t\t\t\t\n                                    <input type=\"password\" placeholder=\"Password\" v-model=\"newpassword\" v-model.trim=\"$v.newpassword.$model\" name=\"newpassword\" id=\"newpassword\" class=\"form-control\" :class=\"{ 'input-error': $v.newpassword.$error }\"/>\n                                    <div class=\"error\" v-if=\"!$v.newpassword.required\">Password is required</div>\n\t\t\t\t\t\t\t\t\t\n                                    <input type=\"password\" placeholder=\"Confirm Password\" v-model=\"confirmPassword\" v-model.trim=\"$v.confirmPassword.$model\" name=\"confirmpassword\" id=\"confirmpassword\" class=\"form-control\" :class=\"{ 'input-error': $v.confirmPassword.$error }\"/>\n                                    <div class=\"error\" v-if=\"!$v.confirmPassword.required\">Confirm Password is required</div>\n                                    <div class=\"error\" v-if=\"!$v.confirmPassword.sameAsPassword\">Passwords must match</div>\n\t\t\t\t\t\t\t\t\t\n                                    <button type=\"button\" @click=\"registerAction\">Sign Up</button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n    </div>\n</template>\n<script>\n\nimport { required, email, minLength, between, sameAs } from 'vuelidate/lib/validators'\n\nexport default {\n\tname:'register',\n\tdata() {\n\t\treturn{\n            username:'',\n\t\t\tnewemail : '',\n\t\t\tnewpassword: '',\n\t\t\terrors:'',\n            serverErrors:'',\n            successMessage:'',\n            submitStatus:null,\n            confirmPassword:''\n\t\t}\n\t},\n    validations: {\n        username: {\n            required       \n        },\n        newemail: {\n            required,\n            email       \n        },\n        newpassword: {\n            required,\n            minLength: minLength(4)\n        },\n        confirmPassword: { \n            required, \n            sameAsPassword: sameAs('newpassword') }\n    },\n    mounted() {\n\t\tjQuery('body').removeClass('is-menu-visible');\n\t},\n\tmethods: {\n         registerAction() {\n            this.$v.$touch()\n            //login action code here\n            if (this.$v.$invalid) {\n                this.submitStatus = 'ERROR'\n                console.log(this.submitStatus)\n            } else {\n                this.$store.dispatch(\"userRegister\", {\n                    username: this.username,\n                    newemail: this.newemail,\n                    newpassword: this.newpassword\n                })\n                .then(response => {\n                    this.successMessage = \"Registered Successfully!\"\n                    //this.$router.push({name:'register'})\n                    console.log('user registered')\n                })\n                .catch(error => {\n                    this.serverErrors = object.values(errors.data.error)\n                })\n            }\n            \n\t\t}\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n    .container{\n        position: relative;\n        overflow: hidden;\n        width: 100%;\n        border-radius: 10px;\n        box-shadow: 0 15px 30px rgba(0, 0, 0, .0),\n                    0 10px 10px rgba(0, 0, 0, .0);\n        background: linear-gradient(to bottom,#5f1d1d54, rgba(189, 131, 131, 0.5));\n    }\n    .error{\n        color: red;\n    }\n    .input-error{\n        border: 1px solid red;\n    }\n    h2{\n        margin: 0;\n    }\n    p{\n        margin: 20px 0 30px;\n    }\n\n    a{\n        color: #222;\n        text-decoration: none;\n        margin: 15px 0;\n        font-size: 1rem;\n    }\n\n    button{\n        border-radius: 20px;\n        border: 1px solid #0a0a0a;\n        background-color: #000000;\n        color: #fff!important;\n        font-size: 1rem;\n        font-weight: bold;\n        letter-spacing: 1px;\n        text-transform: uppercase;\n        transition: transform .1s ease-in;\n    }\n    a:active{\n        transform: scale(.9);\n    }\n    a:focus{\n        outline: none;\n    }\n\n    button.invert{\n        background-color: transparent;\n        border-color: #fff;\n    }\n\n    form{\n        \n        top: 0;\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        flex-direction: column;\n        padding: 90px 60px;\n        width: calc(50% - 120px);\n        height: calc(100% - 180px);\n        background: linear-gradient(to bottom, #ed8686, #97979733);\n        transition: all .5s ease-in-out;\n    }\n    div{\n        font-size: 1rem;\n    }\n    input{\n        background-color: #eee;\n        border: none;\n        padding: 8px 15px;\n        margin: 6px 0;\n        width: calc(100% - 30px);\n        border-radius: 15px;\n        border-bottom: 1px solid #ddd;\n        box-shadow: 0 1px 2px rgba(0, 0, 0, .4),\n                    0 -1px, 1px #fff,\n                    0 1px 0 #fff;\n        overflow: hidden;\n    }\n    \n    .sign-in{\n        left: 0;\n        z-index: 1;\n        margin-left: auto;\n        margin-right: auto;\n    }\n</style>"]}